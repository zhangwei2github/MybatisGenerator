<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.saic.business.center.order.dao.EventCodeMapper" >
  <resultMap id="BaseResultMap" type="com.saic.business.center.order.entity.EventCode" >
    <id column="event_code" property="eventCode" jdbcType="VARCHAR" />
    <result column="event_name" property="eventName" jdbcType="VARCHAR" />
    <result column="sub_name" property="subName" jdbcType="VARCHAR" />
    <result column="event_order" property="eventOrder" jdbcType="INTEGER" />
    <result column="ref_order_status" property="refOrderStatus" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    event_code, event_name, sub_name, event_order, ref_order_status
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.saic.business.center.order.entity.EventCodeExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_event_code
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from t_event_code
    where event_code = #{eventCode,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from t_event_code
    where event_code = #{eventCode,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.saic.business.center.order.entity.EventCodeExample" >
    delete from t_event_code
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.saic.business.center.order.entity.EventCode" >
    insert into t_event_code (event_code, event_name, sub_name, 
      event_order, ref_order_status)
    values (#{eventCode,jdbcType=VARCHAR}, #{eventName,jdbcType=VARCHAR}, #{subName,jdbcType=VARCHAR}, 
      #{eventOrder,jdbcType=INTEGER}, #{refOrderStatus,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.saic.business.center.order.entity.EventCode" >
    insert into t_event_code
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="eventCode != null" >
        event_code,
      </if>
      <if test="eventName != null" >
        event_name,
      </if>
      <if test="subName != null" >
        sub_name,
      </if>
      <if test="eventOrder != null" >
        event_order,
      </if>
      <if test="refOrderStatus != null" >
        ref_order_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="eventCode != null" >
        #{eventCode,jdbcType=VARCHAR},
      </if>
      <if test="eventName != null" >
        #{eventName,jdbcType=VARCHAR},
      </if>
      <if test="subName != null" >
        #{subName,jdbcType=VARCHAR},
      </if>
      <if test="eventOrder != null" >
        #{eventOrder,jdbcType=INTEGER},
      </if>
      <if test="refOrderStatus != null" >
        #{refOrderStatus,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.saic.business.center.order.entity.EventCodeExample" resultType="java.lang.Integer" >
    select count(*) from t_event_code
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_event_code
    <set >
      <if test="record.eventCode != null" >
        event_code = #{record.eventCode,jdbcType=VARCHAR},
      </if>
      <if test="record.eventName != null" >
        event_name = #{record.eventName,jdbcType=VARCHAR},
      </if>
      <if test="record.subName != null" >
        sub_name = #{record.subName,jdbcType=VARCHAR},
      </if>
      <if test="record.eventOrder != null" >
        event_order = #{record.eventOrder,jdbcType=INTEGER},
      </if>
      <if test="record.refOrderStatus != null" >
        ref_order_status = #{record.refOrderStatus,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_event_code
    set event_code = #{record.eventCode,jdbcType=VARCHAR},
      event_name = #{record.eventName,jdbcType=VARCHAR},
      sub_name = #{record.subName,jdbcType=VARCHAR},
      event_order = #{record.eventOrder,jdbcType=INTEGER},
      ref_order_status = #{record.refOrderStatus,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.saic.business.center.order.entity.EventCode" >
    update t_event_code
    <set >
      <if test="eventName != null" >
        event_name = #{eventName,jdbcType=VARCHAR},
      </if>
      <if test="subName != null" >
        sub_name = #{subName,jdbcType=VARCHAR},
      </if>
      <if test="eventOrder != null" >
        event_order = #{eventOrder,jdbcType=INTEGER},
      </if>
      <if test="refOrderStatus != null" >
        ref_order_status = #{refOrderStatus,jdbcType=INTEGER},
      </if>
    </set>
    where event_code = #{eventCode,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.saic.business.center.order.entity.EventCode" >
    update t_event_code
    set event_name = #{eventName,jdbcType=VARCHAR},
      sub_name = #{subName,jdbcType=VARCHAR},
      event_order = #{eventOrder,jdbcType=INTEGER},
      ref_order_status = #{refOrderStatus,jdbcType=INTEGER}
    where event_code = #{eventCode,jdbcType=VARCHAR}
  </update>
</mapper>